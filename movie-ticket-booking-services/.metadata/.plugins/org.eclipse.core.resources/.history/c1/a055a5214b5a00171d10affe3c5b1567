package com.it14031380.dsAssignment2.restaurant.controllers;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.it14031380.dsAssignment2.restaurant.models.FoodItem;
import com.it14031380.dsAssignment2.restaurant.models.Restaurant;

public class RestaurantController {
	static RestaurantController restaurantController = null;

	public RestaurantController() {
		// Creating Food Types
		Restaurant resturentType1 = new Restaurant();
		resturentType1.setType("Chips");
		
		Restaurant resturentType2 = new Restaurant();
		resturentType1.setType("Chips");

		
		
		List<FoodItem> foodItem1 = new ArrayList<FoodItem>();
		FoodItem f1 = new FoodItem();
		f1.setName("snack1");
		f1.setAmount(50);
		foodItem1.add(f1);

	}

	Map<Integer, Restaurant> resturentList = new HashMap<Integer, Restaurant>();

	// Singleton pattern is used to eliminate conflicts
	// Create and return single object
	public static RestaurantController getTheaterController() {
		if (restaurantController != null) {
			return restaurantController;
		} else {
			restaurantController = new RestaurantController();
			return restaurantController;
		}
	}

	// Returns Theater object according to the id
	public Restaurant getResaurantById(int id) {
		return resturentList.get(id);
	}

	// Returns all Theater objects
	public Map<Integer, Restaurant> getAllResturents() {
		return resturentList;
	}
	// Returns all movies in a theater
}
